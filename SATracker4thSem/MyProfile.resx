<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAQhSURBVHhe7d1JjGVTHMfxps1E2tA2bYhIY4GFmYgFCxGJ
        cUFYsiGGrbCRWLQhQSLSRGJYCDHtDImNxIogISRiiJhJGyJCDM1XfumjVf+qm3pV79533jm/T/KSSr2q
        e/739+pW3j3TW7UqIiIiIiIiImJZgNXAacBNwDPAu8D3wO/loa/fKc/pZ04FdvbjxAoBhwC3AZ8zuc+A
        DcDBftyYELAWeAD4zVNeBh1jI3CgtxNLAFwOfOepTsG3wGXeXuwAsCvwoKc4gPvVlrcfCwB7Ac97cgN6
        Tm16HfHvlTHmi/GPl4DdvJ7ujfRvakc2ej1dA67whGbgUq+rS8ABwCZPZwb0ji5vict9Ri3u8/q6orvn
        Kd30TYtqOdTr7EbpDqnNBq+zC+r0K/1MtVF/2Wqvt3ml17ZWJ3u9zSvd47W60ettHvCsp1CRp7ze5pWB
        pFq97fU2b6Cu9WnZ5PU2r7L7D/er19s8T6A2Xm/zPIDaeL3N8wBq4/U2D9jsIVRks9fbPOBHT6EiP3i9
        zQM+9hQq8pHX27wyll2rF73e5gF3eQoVudPrbR5wvqdQkfO83uYB+wK/eBIV+BnYx+vtAvC4p1GBx7zO
        bgBnehoVOMPr7ArwiicyQy97fd0BTgT+9GRmQDX0N3S7PcC9ns4M3ON1dQvYA3jTExrRW8CeXlfXgMOB
        Lz2pEXwBHOb1xJYX5TjgG09sQF8Dx3odsQCwHvjQkxvA+8AR3n5sB7AGeNoTnKIn1VPg7cb/AC4BPvU0
        V+AT4GJvJyZQ3oFdA3zg6U5A/56uBnb348cyATsBp6trHHgD+MNTX0C7OrwO3KE5xH6sGEBZJHoUcDZw
        QXmcVb6X5c4RERERERERETEYYB1wVVkufa0/P23AdaUttbnOn++SxrK1SL9McPjLemw1iLTWf2elgIO0
        Dt3aUtuqQbX0Nb5e9lW8skyQ8xfBaR+t66exBZ/GQoAbyq6k/0U1qTbV2O5+jGWs/G6tTvIElkAbwmgr
        jok3Qy6bMN9cZpdMSjtla9nEej/u3NKsDuCJKc1O1F/vq8DtGoots1T2L2MjeuhrfU9Dv/qZ15ZwFS6F
        atfE8GP8/OYGcGTZg30agdRC56LJF/NzxQD7lctcw6it0i4UOsc1fv5VAc5d5ob580oT7S7yHGYO2Bt4
        xKvtyMPKwHOZiXJDpxkevdOE7dnewwBHl8s2tvhKs148p1GULV41EzC2pUwmvl9aMS2u90piqxc8r0FV
        ulizNuMtHgVu9dZjkVs8t8EAj3rrschDnttgKt+npBbj7ZeivUC89VjkHM9tMKVn9T2vILbSB17u4rkN
        CjilbNQS2/oJOMHzGgVw0kgLNOeFVmod7zmNqnw+rQaL9FkgGsTRWHhPD52zzv3CLj/mIiIiIiIiIiIi
        IurwN+A8rv9CtgziAAAAAElFTkSuQmCC
</value>
  </data>
</root>